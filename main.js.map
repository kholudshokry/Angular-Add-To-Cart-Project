{"version":3,"sources":["./src/app/cartdropdown/cartdropdown.component.ts","./src/app/cartdropdown/cartdropdown.component.html","./src/app/service/data.service.ts","./src/environments/environment.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/services/customvalidation.service.ts","./src/app/submitorder/submitorder.component.ts","./src/app/submitorder/submitorder.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/productlist/productlist.component.ts","./src/app/productlist/productlist.component.html","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/cartdetails/cartdetails.component.ts","./src/app/cartdetails/cartdetails.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/search.pipe.ts","./src/app/productdetails/productdetails.component.ts","./src/app/productdetails/productdetails.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { CustomvalidationService } from '../services/customvalidation.service';\n\n@Component({\n  selector: 'app-cartdropdown',\n  templateUrl: './cartdropdown.component.html',\n  styleUrls: ['./cartdropdown.component.css']\n})\nexport class CartdropdownComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private customValidator: CustomvalidationService\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', [Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password: ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      confirmPassword: ['', [Validators.required]],\n    },\n      {\n        validator: this.customValidator.MatchPassword('password', 'confirmPassword'),\n      }\n    );\n  }\n\n  get registerFormControl() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.registerForm.valid) {\n      alert('Form Submitted succesfully!!!\\n Check the values in browser console.');\n      console.table(this.registerForm.value);\n    }\n  }\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8 mx-auto\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h3>Angular Reactive Form</h3>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form class=\"form\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"form-group\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"(registerFormControl.name.touched || submitted) && registerFormControl.name.errors?.required\">\r\n                                Name is required\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\">\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"(registerFormControl.email.touched || submitted) && registerFormControl.email.errors?.required\">\r\n                                Email is required\r\n                            </span>\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"registerFormControl.email.touched && registerFormControl.email.errors?.email\">\r\n                                Enter a valid email address\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label>User Name</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"username\">\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"(registerFormControl.username.touched || submitted) && registerFormControl.username.errors?.required\">\r\n                                User Name is required\r\n                            </span>\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"registerFormControl.username.touched && registerFormControl.username.errors?.userNameNotAvailable\">\r\n                                User Name is not available\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"(registerFormControl.password.touched || submitted) && registerFormControl.password.errors?.required\">\r\n                                Password is required\r\n                            </span>\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"registerFormControl.password.touched && registerFormControl.password.errors?.invalidPassword\">\r\n                                Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\r\n                                letter and 1 number\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label>Confirm Password</label>\r\n                            <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"(registerFormControl.confirmPassword.touched || submitted)&& registerFormControl.confirmPassword.errors?.required\">\r\n                                Confirm Password is required\r\n                            </span>\r\n                            <span class=\"text-danger\"\r\n                                *ngIf=\"registerFormControl.confirmPassword.touched && registerFormControl.confirmPassword.errors?.passwordMismatch\">\r\n                                Passwords doesnot match\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <button type=\"submit\" class=\"btn btn-success\">Register</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http:HttpClient) { }\n  getProductslist(): Observable<any>{\n    return this.http.get('https://fakestoreapi.com/products')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { CustomvalidationService } from '../services/customvalidation.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n    \n  registerForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private customValidator: CustomvalidationService\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      \n    }\n    );\n  }\n\n  get registerFormControl() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.registerForm.valid) {\n      \n      console.table(this.registerForm.value);\n    }\n  }\n  delete(){\n    localStorage.clear();\n  }\n}","\n\n <br> <br> <br> <br> \n\n\n<!-- <div class=\"row\"> -->\n    <!-- <div class=\"col-md-4 offset-md-4\"> -->\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-8 mx-auto\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <h3 class=\"text-center\">CheckOut Form</h3>\n                        </div>\n                        <div class=\"card-body\">\n                            <form class=\"form\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                                <div class=\"form-group\">\n                                    <label>Phone</label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n                                    <span class=\"text-danger\"\n                                        *ngIf=\"(registerFormControl.name.touched || submitted) \">\n                                        Phone is required\n                                    </span>\n                      \n                                </div>\n                                <div class=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"email\" placeholder=\"xxxxxxx@xxxx.xxx\">\n                                    <span class=\"text-danger\"\n                                        *ngIf=\"(registerFormControl.email.touched || submitted) && registerFormControl.email.errors?.required\">\n                                        Email is required\n                                    </span>\n                                    <span class=\"text-danger\"\n                                        *ngIf=\"registerFormControl.email.touched && registerFormControl.email.errors?.email\">\n                                        Enter a valid email address it must have this pattern \"xxxxxxx@xxxx.xxx\"\n                                    </span>\n                                </div>\n        \n                                <div class=\"form-group\">\n                                    <label>Address</label>\n                                    <textarea type=\"password\" class=\"form-control\" formControlName=\"password\"></textarea>\n                                    <span class=\"text-danger\"\n                                        *ngIf=\"(registerFormControl.password.touched || submitted) \">\n                                        Address is required\n                                    </span>\n                                </div>\n                         \n                                <div class=\"form-group\">\n                                    <button type=\"submit\" class=\"btn btn-dark col-md-4 \" (click)=\"delete()\">Submit</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n   \n<br> <br> <br> <br> <br> \n\n\n\n","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomvalidationService {\n\n  patternValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\n      const valid = regex.test(control.value);\n      return valid ? null : { invalidPassword: true };\n    };\n  }\n\n  MatchPassword(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n      } else {\n        confirmPasswordControl.setErrors(null);\n      }\n    }\n  }\n\n  userNameValidator(userControl: AbstractControl) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (this.validateUserName(userControl.value)) {\n          resolve({ userNameNotAvailable: true });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n  }\n\n  validateUserName(userName: string) {\n    const UserList = ['ankit', 'admin', 'user', 'superuser'];\n    return (UserList.indexOf(userName) > -1);\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submitorder',\n  templateUrl: './submitorder.component.html',\n  styleUrls: ['./submitorder.component.css']\n})\nexport class SubmitorderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>submitorder works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ShoppingCart';\n}\n","<app-navbar></app-navbar>\n\n\n<router-outlet></router-outlet>\n\n <app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NgbPaginationModule, NgbAlertModule, NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ProductlistComponent } from './productlist/productlist.component';\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\nimport { SubmitorderComponent } from './submitorder/submitorder.component';\nimport { CartdropdownComponent } from './cartdropdown/cartdropdown.component';\nimport { CartdetailsComponent } from './cartdetails/cartdetails.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { CartComponent } from './cart/cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { SearchPipe } from './search.pipe';\n// import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    ProductlistComponent,\n    ProductdetailsComponent,\n    SubmitorderComponent,\n    CartdropdownComponent,\n    CartdetailsComponent,\n    CartComponent,\n    CheckoutComponent,\n    SearchPipe,\n    \n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbPaginationModule, \n    NgbAlertModule, \n    NgbModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../service/data.service';\n\n\n@Component({\n  selector: 'app-productlist',\n  templateUrl: './productlist.component.html',\n  styleUrls: ['./productlist.component.css']\n})\n\n\n\nexport class ProductlistComponent implements OnInit {\n  data: any; \n  productsArr: any;\n  term: string;\n\n  constructor( private dataservice : DataService) { }\n\n  ngOnInit(): void {\n    this.dataservice.getProductslist().subscribe({\n      next: (data) => {\n        console.log('success:' , data);\n        this.data = data;\n        console.log(this.data = data);\n\n      },\n      error : (msg) => {\n        console.log('error:' , msg);\n      },\n    });\n  }\n  addCard(proData)\n{\n     if(localStorage.getItem(\"productsData\") == null)\n      {\n        this.productsArr = [];\n        this.productsArr.push(proData);\n        localStorage.setItem(\"productsData\" , JSON.stringify(this.productsArr));\n\n      }\n      else\n      {\n        this.productsArr.push(proData)\n        localStorage.setItem(\"productsData\" , JSON.stringify(this.productsArr));\n      }\n\n\n    }\n\n}\n","\n <div style=\"background-color: rgb(248, 247, 247);\">\n    <div class=\"row\" style=\"margin-left:35rem ;overflow-x:none;\">\n    <i class=\"fa fa-search mt-2 \" aria-hidden=\"true\"></i>\n    <input class=\"form-control col-md-4 ml-2\" [(ngModel)]='term'  type=\"search\"  placeholder=\"Search\" aria-label=\"Search\" >\n    </div>\n    </div>\n\n<div class=\"album py-5 bg-light\">\n  \n    <div class=\"container\">\n     \n     <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\n         <div class=\"col-md-4 mb-4\" *ngFor=\"let i of data | search:term ;let j= index\">\n            <div class=\"card shadow-sm\">\n                <img  class=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" src=\"{{i.image}}\"\n                 role=\"img\" aria-label=\"Placeholder: Thumbnail\" />\n            \n               <div class=\"card-body\">\n                <strong class=\"text-danger\">{{i.price}}$</strong>\n                  <p class=\"card-text\">{{i.title | slice: 0:20}}...</p>\n                   <div class=\"d-flex justify-content-between align-items-center\">\n                       <div class=\"btn-group\">\n                       <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" (click)=\"addCard(i)\">Add To Card</button>\n                       <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" [routerLink]='[\"/details\" , j]'>View</button>\n                       </div>\n                       \n                      \n                 </div> \n             </div> \n          </div>\n     </div>\n    \n </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  proarr:any;\n  constructor() { }\n\n  ngOnInit(): void {\n  \n  if(localStorage.getItem(\"productsData\") != null){\n    this.proarr=JSON.parse(localStorage.getItem(\"productsData\"));\n  }\n\n}\n deleteItem(i)\n  {\n    //  let indexDeleted = proInfo.id;\n     this.proarr =JSON.parse(localStorage.getItem(\"productsData\"));\n     for(let item = 0; item < this.proarr.length; item++)\n     {\n         if (this.proarr[item]['id'] == i.id) {\n          this.proarr.splice(item, 1);\n          localStorage.setItem('productsData', JSON.stringify(this.proarr));\n        return true;\n        }\n\n     }\n    }\n  }\n","\n\n<br><br><br><br><br><br><br>\n\n\n<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-12\">\n          <div class=\"table-responsive\"  style=\"margin-top: 55px;\">\n              <table class=\"table table-striped table-bordered\">\n                  <thead class=\"thead-dark\">\n                      <tr>\n                          <th class=\"text-center \"> Product</th>\n                          <th  class=\"text-center \">Price</th>\n                          <th  class=\"text-center \">Quantity</th>\n                          <th class=\"text-center \"> Sub Total</th>\n                          <th class=\"text-center \">Remove</th>\n                      </tr>\n                  </thead>\n                  <tbody >\n                 \n                      <tr *ngFor=\"let i of proarr\">\n                          <td > <img  src=\"{{i.image}}\"\n                            role=\"img\"  class=\"rounded-circle text-center ml-5\" style=\"width:70px;height:70px;\"/></td>\n                          <td class=\"text-center\">{{i.price}}$</td>\n                          <td><input class=\"form-control\" [value]=\"\" type=\"number\" min=0 max=\"1000\" /></td>\n                   \n                          <td class=\"text-center\">Sub-Total</td>\n                          <td class=\"text-center font-white\"><button (click)=\"deleteItem(i)\" class=\"btn btn-sm btn-danger\"><i class=\"fa fa-trash\"></i> </button> </td>\n                      </tr>\n            \n                      <tr>\n                      \n                          <td colspan=\"1\"><strong class=\"font-white\" >Total</strong></td>\n                         \n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n      </div>\n      <div class=\"col mb-2\">\n          <div class=\"row\">\n              <div class=\"col-sm-12  col-md-6\">\n                  <button class=\"btn btn-block  btn-dark\" routerLink=\"/home\">Continue Shopping</button>\n              </div>\n              <div class=\"col-sm-12 col-md-6 text-right\">\n                 \n                    <button class=\"btn btn-block btn-dark\" routerLink=\"/checkout\">Check Out</button>\n                \n              </div>\n          </div>\n      </div>\n  </div>\n</div><br><br><br><br><br><br><br><br><br>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"container-fluid p-5\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <h4>CUSTOMER SERVICE</h4>\n                <hr class=\"line-1\">\n                <ul>\n                    <li>Contact Us</li>\n                    <li>Track Order</li>\n                    <li>Return Order</li>\n                    <li>Cancel Order</li>\n                </ul>\n            </div>\n            <div class=\"col-sm-3\">\n                <h4>COMPANY</h4>\n                <hr class=\"line-1\">\n                <ul>\n                    <li>About Us</li>\n                    <li>We're Hiring</li>\n                    <li>Terms & Conditions</li>\n                    <li>Privacy Policy</li>\n                    <li>Blog</li>\n                </ul>\n            </div>\n            <div class=\"col-sm-3\">\n                <h4>CONTACT US</h4>\n                <hr class=\"line-1\">\n                <ul>\n                    <li>FACEBOOK</li>\n                    <li>INSTAGRAM</li>\n                    <li>TWITTER</li>\n                </ul>\n            </div>\n            <div class=\"col-sm-3\">\n                <h4>NEWSLETTER</h4>\n                <hr class=\"line-1\">\n                <form appearance=\"standard\">\n                    <label>Email:</label>\n                    <input matInput placeholder=\"Enter email here\">\n                </form>\n            </div>\n        </div>\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cartdetails',\n  templateUrl: './cartdetails.component.html',\n  styleUrls: ['./cartdetails.component.css']\n})\nexport class CartdetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cartdetails works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- sidebar -->\n\n<!-- <ng-sidebar-container>\n  <ng-sidebar #sidebar [(opened)]=\"_opened\" [closeOnClickOutside]=\"true\">\n    <p>Sidebar contents</p>\n  </ng-sidebar>\n</ng-sidebar-container> -->\n\n<!-- sidebar end -->\n\n<!-- Navbar -->\n<nav class=\"navbar navbar-expand-lg navbar-light scrolling-navbar\">\n    <div class=\"container\">\n   \n\n      <!-- Links -->\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n  \n        <!-- Left -->\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\">\n            <a routerLink=\"home\" class=\"nav-link\"  data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"><img src=\"assets/logo.png\">\n              <span class=\"sr-only\">(current)</span>\n            </a>\n          </li>\n          <li>\n            <!-- Search form -->\n<!-- <form class=\"form-inline md-form form-sm active-pink active-pink-2 mt-3\">\n  <i class=\"fa fa-search \" aria-hidden=\"true\"></i>\n  <input class=\"form-control form-control-sm ml-3 \" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" id=\"search\"\n    mdbInput>\n</form> -->\n          </li>\n        </ul>\n  \n        <!-- Right -->\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\" >\n            <a class=\"nav-link\">\n           <!-- Search form -->\n  \n\n            </a>\n          </li>\n       \n          <li class=\"nav-item\" >\n            <a  class=\"nav-link\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                <div class=\"d-inline-block\" ngbDropdown #myDrop=\"ngbDropdown\">\n                    <button class=\"btn  mr-2\" id=\"dropdownManual\" ngbDropdownAnchor (focus)=\"myDrop.open()\"><i class=\"fa fa-user fa-2x \" aria-hidden=\"true\"></i></button>\n                    <div ngbDropdownMenu aria-labelledby=\"dropdownManual\">\n                      <button ngbDropdownItem>View/Edit Profile</button>\n                      <button ngbDropdownItem>Log Out</button>\n               \n                    </div>\n                  </div>\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n             \n            </a>\n          </li>\n          <li class=\"nav-item\" >\n            <div class=\"shopping-cart\">\n            \n              <a  routerLink=\"cart\" class=\"nav-link\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" >\n                <i class=\"fa fa-shopping-cart fa-2x mt-2\" aria-hidden=\"true\"></i>\n               <div class=\"cart-counter\">\n                 \n                </div>\n              </a>\n            </div>\n          </li>\n        </ul>\n  \n      </div>\n  \n    </div>\n  </nav>\n  <!-- Navbar -->\n  ","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(products:any[] , term:string): any {\n    if(term == undefined)\n    {\n      return products;\n    }\n      return products.filter(function(products){\n            return products.title.toLowerCase().includes(term.toLowerCase())\n      });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { DataService } from '../service/data.service';\n\n@Component({\n  selector: 'app-productdetails',\n  templateUrl: './productdetails.component.html',\n  styleUrls: ['./productdetails.component.css']\n})\nexport class ProductdetailsComponent implements OnInit {\n  index;\n  SelectedProduct:any ={};\n  productsArr: any;\n  constructor( Active : ActivatedRoute , Data:  DataService ) {\n    this.index = Active.snapshot.paramMap.get(\"id\");\n    Data.getProductslist().subscribe((data)=>{\n      this.SelectedProduct = data[this.index]\n      console.log(this.SelectedProduct);\n    });\n   }\n\n  ngOnInit(): void {\n  }\n  \n  addCard(proData)\n {\n     if(localStorage.getItem(\"productsData\") == null)\n      {\n        this.productsArr = [];\n        this.productsArr.push(proData);\n        localStorage.setItem(\"productsData\" , JSON.stringify(this.productsArr));\n\n      }\n      else\n      {\n        this.productsArr.push(proData)\n        localStorage.setItem(\"productsData\" , JSON.stringify(this.productsArr));\n      }\n\n\n    }\n\n  }\n\n","<br><br><br>\r\n<div class=\"container\" style=\"margin: 8px\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\" >\r\n        <img src=\"{{SelectedProduct.image}}\" alt=\"\" class=\"figure-img\" style=\"width:250px;height:250px\">\r\n      </div>\r\n      <div class=\"col-md-6\" >\r\n        <h3 class=\"\" style=\" font-family: 'Anton', sans-serif; font-size: 20px;\">\r\n         <b>{{SelectedProduct.title}}</b>\r\n        </h3>\r\n        <p class=\"lead text-danger\" style=\" font-family: 'Anton', sans-serif; font-size: 20px;\">\r\n          {{SelectedProduct.price}}$\r\n        </p>\r\n        <p class=\"lead\" style=\" font-family: 'Anton', sans-serif; font-size: 18px;\"><span class=\"lead text-danger\">Category:</span>\r\n          {{SelectedProduct.category}}\r\n        </p>\r\n        <p class=\"lead\" style=\" font-family: 'Anton', sans-serif; font-size: 18px;\">\r\n          {{SelectedProduct.description}}\r\n        </p><br><br>\r\n     \r\n       \r\n        <div class=\"row\">\r\n      \r\n        <p class=\"lead\">\r\n          <button class=\"btn btn-outline-primary mr-4\" routerLink=\"/home\">Continue Shopping</button>\r\n          <button class=\"btn btn-outline-primary\" (click)=\"addCard(SelectedProduct)\">Add to cart</button>\r\n        </p>\r\n    </div><br><br><br>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent } from './cart/cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\nimport { ProductlistComponent } from './productlist/productlist.component';\n\n\n\nconst routes: Routes = [\n  {path:\"details/:id\" , component : ProductdetailsComponent} ,\n  {path:\"home\" , component : ProductlistComponent} ,\n  {path:\"\" , redirectTo:\"home\",pathMatch:\"full\"} ,\n  {path:\"cart\" , component : CartComponent} ,\n  {path:\"checkout\" , component : CheckoutComponent} ,\n  \n  //from cart to home \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}